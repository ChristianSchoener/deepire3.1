i: [1,21,0,10,1,1,0,0] t31_enumset1
a: [3,31,0,10,1,21]
s: 31
i: [1,25,0,5,1,0,0,2] idempotence_k2_xboole_0
s: 25
i: [1,22,0,6,1,0,0,2] t29_enumset1
s: 22
i: [1,26,0,7,1,0,0,2] commutativity_k2_xboole_0
s: 26
i: [1,27,0,7,1,0,0,2] commutativity_k2_tarski
s: 27
i: [1,23,0,11,1,0,0,1] t2_enumset1
s: 23
d: [2,33,1,10,1,0,44,23,22]
s: 33
i: [1,24,0,13,1,0,0,1] l13_enumset1
s: 24
d: [2,40,2,7,1,0,44,33,25]
s: 40
d: [2,52,1,9,1,0,44,24,25]
s: 52
d: [2,55,1,9,1,0,44,25,24]
s: 55
d: [2,43,2,7,1,0,44,25,33]
s: 43
d: [2,46,1,12,1,0,44,24,22]
d: [2,58,1,10,1,0,22,46,23]
s: 58
d: [2,63,2,9,1,1,44,31,58]
d: [2,65,2,0,0,1,19,63]
e: 65
d: [2,61,2,0,0,1,52,31,58]
e: 61
f: 61,21
% Refutation found. Thanks to Tanya!
% SZS status Theorem for enumset1__t31_enumset1
% SZS output start Proof for enumset1__t31_enumset1
1. ! [X0] : ! [X1] : ! [X2] : k2_enumset1(X0,X0,X1,X2) = k1_enumset1(X0,X1,X2) [input t31_enumset1]
2. ~! [X0] : ! [X1] : ! [X2] : k2_enumset1(X0,X0,X1,X2) = k1_enumset1(X0,X1,X2) [negated conjecture 1]
11. ! [X0] : ! [X1] : ! [X2] : ! [X3] : k2_enumset1(X0,X1,X2,X3) = k2_xboole_0(k2_tarski(X0,X1),k2_tarski(X2,X3)) [input l13_enumset1]
12. ! [X0] : k2_tarski(X0,X0) = k1_tarski(X0) [input t29_enumset1]
13. ! [X0] : ! [X1] : ! [X2] : k1_enumset1(X0,X1,X2) = k2_xboole_0(k1_tarski(X0),k2_tarski(X1,X2)) [input t2_enumset1]
14. ~! [X0,X1,X2] : k2_enumset1(X0,X0,X1,X2) = k1_enumset1(X0,X1,X2) [flattening 2]
15. ! [X0,X1,X2] : k1_enumset1(X0,X1,X2) = k2_xboole_0(k1_tarski(X0),k2_tarski(X1,X2)) [flattening 13]
16. ! [X0,X1,X2,X3] : k2_enumset1(X0,X1,X2,X3) = k2_xboole_0(k2_tarski(X0,X1),k2_tarski(X2,X3)) [flattening 11]
18. ? [X0,X1,X2] : k2_enumset1(X0,X0,X1,X2) != k1_enumset1(X0,X1,X2) [ennf transformation 14]
19. ? [X0,X1,X2] : k2_enumset1(X0,X0,X1,X2) != k1_enumset1(X0,X1,X2) => k2_enumset1(sK0,sK0,sK1,sK2) != k1_enumset1(sK0,sK1,sK2) [choice axiom]
20. k2_enumset1(sK0,sK0,sK1,sK2) != k1_enumset1(sK0,sK1,sK2) [skolemisation 18,19]
21. k2_enumset1(sK0,sK0,sK1,sK2) != k1_enumset1(sK0,sK1,sK2) [cnf transformation 20] {a:0,w:10,wCS:1000,goal:1,sine:0,thAx:0,allAx:2,thDist:-2}
22. k2_tarski(X0,X0) = k1_tarski(X0) [cnf transformation 12] {a:0,w:6,wCS:2400,nSel:1,sine:2,thAx:0,allAx:1,thDist:-1}
23. k1_enumset1(X0,X1,X2) = k2_xboole_0(k1_tarski(X0),k2_tarski(X1,X2)) [cnf transformation 15] {a:0,w:11,wCS:4400,nSel:1,sine:1,thAx:0,allAx:1,thDist:-1}
24. k2_enumset1(X0,X1,X2,X3) = k2_xboole_0(k2_tarski(X0,X1),k2_tarski(X2,X3)) [cnf transformation 16] {a:0,w:13,wCS:5200,nSel:1,sine:1,thAx:0,allAx:1,thDist:-1}
29. 1 <=> k2_enumset1(sK0,sK0,sK1,sK2) = k1_enumset1(sK0,sK1,sK2) [avatar definition]
31. k2_enumset1(sK0,sK0,sK1,sK2) != k1_enumset1(sK0,sK1,sK2) <- (~1) [avatar component clause 29] {a:0,w:10,wCS:1000,nSel:1,goal:1,sine:255,thAx:0,allAx:2,thDist:-2}
32. ~1 [avatar split clause 21,29]
46. k2_enumset1(X0,X0,X1,X2) = k2_xboole_0(k1_tarski(X0),k2_tarski(X1,X2)) [superposition 24,22] {a:1,w:12,wCS:4800,sine:1,thAx:0,allAx:2,thDist:-2}
58. k2_enumset1(X0,X0,X1,X2) = k1_enumset1(X0,X1,X2) [forward demodulation 46,23] {a:1,w:10,wCS:4000,nSel:1,sine:1,thAx:0,allAx:2,thDist:-2}
61. $false <- (~1) [unit resulting resolution 31,58] {a:2,w:0,goal:1,sine:1,thAx:0,allAx:4,thDist:-4}
67. 1 [avatar contradiction clause 61]
70. $false [avatar sat refutation 32,67] {a:0,w:0,goal:1,sine:0,thAx:0,allAx:11,thDist:-11}
% SZS output end Proof for enumset1__t31_enumset1
% ------------------------------
% Version: Vampire 4.5.1 (commit 226f88162 on 2021-09-12 20:13:44 +0200)
% Termination reason: Refutation

% >>> Input
% Input formulas: 12
% Introduced skolems: 3
% 
% >>> Saturation
% Initial clauses: 7
% Generated clauses: 43
% Active clauses: 11
% Passive clauses: 32
% Final active clauses: 11
% Final passive clauses: 19
% Main loop iterations started: 13
% 
% >>> Simplifying Inferences
% Trivial inequalities: 1
% Fw demodulations: 3
% 
% >>> Deletion Inferences
% Forward subsumptions: 6
% 
% >>> Generating Inferences
% Unit resulting resolution: 1
% Forward superposition: 19
% Backward superposition: 11
% 
% >>> AVATAR
% Sat splitting refutations: 2
% 
% >>> SAT Solver Statistics
% SAT solver clauses: 5
% SAT solver unit clauses: 3
% 
% Memory used [KB]: 9338
% Time elapsed: 0.002 s
% ------------------------------
% ------------------------------
% Time measurement results:
% parsing: 0.001 s
% other: 0.002 s ( own 0.001 s ) 

