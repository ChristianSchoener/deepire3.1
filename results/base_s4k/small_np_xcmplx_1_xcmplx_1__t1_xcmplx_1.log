i: [1,23,0,2,1,1,0,0] t1_xcmplx_1
a: [3,37,0,2,1,23]
s: 37
i: [1,22,0,2,1,1,0,0] t1_xcmplx_1
a: [3,42,0,2,1,22]
s: 42
i: [1,21,0,2,1,1,0,0] t1_xcmplx_1
a: [3,47,0,2,1,21]
s: 47
i: [1,28,0,2,1,0,0,1] rc1_xcmplx_0
a: [3,52,0,2,1,28]
s: 52
i: [1,24,0,11,1,1,0,0] t1_xcmplx_1
a: [3,32,0,11,1,24]
s: 32
i: [1,25,0,8,3,0,0,1] fc2_xcmplx_0
s: 25
i: [1,26,0,11,3,0,0,1] commutativity_k2_xcmplx_0
s: 26
i: [1,27,0,17,4,0,0,1] spc6_arithm
s: 27
d: [2,72,1,0,0,4,52,47,42,37,32,27]
e: 72
d: [2,78,1,17,4,1,44,32,27]
d: [2,85,1,6,3,1,19,78]
d: [2,95,1,4,2,2,21,85,37]
d: [2,96,1,2,1,3,21,95,42]
d: [2,97,1,0,0,4,21,96,47]
e: 97
f: 97,21,22,23,24
% Refutation found. Thanks to Tanya!
% SZS status Theorem for xcmplx_1__t1_xcmplx_1
% SZS output start Proof for xcmplx_1__t1_xcmplx_1
1. ! [X0] : (v1_xcmplx_0(X0) => ! [X1] : (v1_xcmplx_0(X1) => ! [X2] : (v1_xcmplx_0(X2) => k2_xcmplx_0(X0,k2_xcmplx_0(X1,X2)) = k2_xcmplx_0(k2_xcmplx_0(X0,X1),X2)))) [input t1_xcmplx_1]
2. ~! [X0] : (v1_xcmplx_0(X0) => ! [X1] : (v1_xcmplx_0(X1) => ! [X2] : (v1_xcmplx_0(X2) => k2_xcmplx_0(X0,k2_xcmplx_0(X1,X2)) = k2_xcmplx_0(k2_xcmplx_0(X0,X1),X2)))) [negated conjecture 1]
7. ! [X0,X1,X2] : ((v1_xcmplx_0(X2) & v1_xcmplx_0(X1) & v1_xcmplx_0(X0)) => k2_xcmplx_0(X0,k2_xcmplx_0(X1,X2)) = k2_xcmplx_0(k2_xcmplx_0(X0,X1),X2)) [input spc6_arithm]
8. ? [X0] : (? [X1] : (? [X2] : (k2_xcmplx_0(X0,k2_xcmplx_0(X1,X2)) != k2_xcmplx_0(k2_xcmplx_0(X0,X1),X2) & v1_xcmplx_0(X2)) & v1_xcmplx_0(X1)) & v1_xcmplx_0(X0)) [ennf transformation 2]
13. ! [X0,X1,X2] : (k2_xcmplx_0(X0,k2_xcmplx_0(X1,X2)) = k2_xcmplx_0(k2_xcmplx_0(X0,X1),X2) | (~v1_xcmplx_0(X2) | ~v1_xcmplx_0(X1) | ~v1_xcmplx_0(X0))) [ennf transformation 7]
14. ! [X0,X1,X2] : (k2_xcmplx_0(X0,k2_xcmplx_0(X1,X2)) = k2_xcmplx_0(k2_xcmplx_0(X0,X1),X2) | ~v1_xcmplx_0(X2) | ~v1_xcmplx_0(X1) | ~v1_xcmplx_0(X0)) [flattening 13]
15. ? [X0] : (? [X1] : (? [X2] : (k2_xcmplx_0(X0,k2_xcmplx_0(X1,X2)) != k2_xcmplx_0(k2_xcmplx_0(X0,X1),X2) & v1_xcmplx_0(X2)) & v1_xcmplx_0(X1)) & v1_xcmplx_0(X0)) => (? [X1] : (? [X2] : (k2_xcmplx_0(sK0,k2_xcmplx_0(X1,X2)) != k2_xcmplx_0(k2_xcmplx_0(sK0,X1),X2) & v1_xcmplx_0(X2)) & v1_xcmplx_0(X1)) & v1_xcmplx_0(sK0)) [choice axiom]
16. ? [X1] : (? [X2] : (k2_xcmplx_0(sK0,k2_xcmplx_0(X1,X2)) != k2_xcmplx_0(k2_xcmplx_0(sK0,X1),X2) & v1_xcmplx_0(X2)) & v1_xcmplx_0(X1)) => (? [X2] : (k2_xcmplx_0(sK0,k2_xcmplx_0(sK1,X2)) != k2_xcmplx_0(k2_xcmplx_0(sK0,sK1),X2) & v1_xcmplx_0(X2)) & v1_xcmplx_0(sK1)) [choice axiom]
17. ? [X2] : (k2_xcmplx_0(sK0,k2_xcmplx_0(sK1,X2)) != k2_xcmplx_0(k2_xcmplx_0(sK0,sK1),X2) & v1_xcmplx_0(X2)) => (k2_xcmplx_0(sK0,k2_xcmplx_0(sK1,sK2)) != k2_xcmplx_0(k2_xcmplx_0(sK0,sK1),sK2) & v1_xcmplx_0(sK2)) [choice axiom]
18. ((k2_xcmplx_0(sK0,k2_xcmplx_0(sK1,sK2)) != k2_xcmplx_0(k2_xcmplx_0(sK0,sK1),sK2) & v1_xcmplx_0(sK2)) & v1_xcmplx_0(sK1)) & v1_xcmplx_0(sK0) [skolemisation 8,17,16,15]
21. v1_xcmplx_0(sK0) [cnf transformation 18] {a:0,w:2,wCS:200,goal:1,sine:0,thAx:0,allAx:4,thDist:-4}
22. v1_xcmplx_0(sK1) [cnf transformation 18] {a:0,w:2,wCS:200,goal:1,sine:0,thAx:0,allAx:4,thDist:-4}
23. v1_xcmplx_0(sK2) [cnf transformation 18] {a:0,w:2,wCS:200,goal:1,sine:0,thAx:0,allAx:4,thDist:-4}
24. k2_xcmplx_0(sK0,k2_xcmplx_0(sK1,sK2)) != k2_xcmplx_0(k2_xcmplx_0(sK0,sK1),sK2) [cnf transformation 18] {a:0,w:11,wCS:1100,goal:1,sine:0,thAx:0,allAx:4,thDist:-4}
27. k2_xcmplx_0(X0,k2_xcmplx_0(X1,X2)) = k2_xcmplx_0(k2_xcmplx_0(X0,X1),X2) | ~v1_xcmplx_0(X2) | ~v1_xcmplx_0(X1) | ~v1_xcmplx_0(X0) [cnf transformation 14] {a:0,w:17,wCS:6800,nSel:1,sine:1,thAx:0,allAx:1,thDist:-1}
30. 1 <=> k2_xcmplx_0(sK0,k2_xcmplx_0(sK1,sK2)) = k2_xcmplx_0(k2_xcmplx_0(sK0,sK1),sK2) [avatar definition]
32. k2_xcmplx_0(sK0,k2_xcmplx_0(sK1,sK2)) != k2_xcmplx_0(k2_xcmplx_0(sK0,sK1),sK2) <- (~1) [avatar component clause 30] {a:0,w:11,wCS:1100,nSel:1,goal:1,sine:255,thAx:0,allAx:4,thDist:-4}
33. ~1 [avatar split clause 24,30]
35. 2 <=> v1_xcmplx_0(sK2) [avatar definition]
37. v1_xcmplx_0(sK2) <- (2) [avatar component clause 35] {a:0,w:2,wCS:200,nSel:1,goal:1,sine:255,thAx:0,allAx:4,thDist:-4}
38. 2 [avatar split clause 23,35]
40. 3 <=> v1_xcmplx_0(sK1) [avatar definition]
42. v1_xcmplx_0(sK1) <- (3) [avatar component clause 40] {a:0,w:2,wCS:200,nSel:1,goal:1,sine:255,thAx:0,allAx:4,thDist:-4}
43. 3 [avatar split clause 22,40]
45. 4 <=> v1_xcmplx_0(sK0) [avatar definition]
47. v1_xcmplx_0(sK0) <- (4) [avatar component clause 45] {a:0,w:2,wCS:200,nSel:1,goal:1,sine:255,thAx:0,allAx:4,thDist:-4}
48. 4 [avatar split clause 21,45]
78. k2_xcmplx_0(sK0,k2_xcmplx_0(sK1,sK2)) != k2_xcmplx_0(sK0,k2_xcmplx_0(sK1,sK2)) | ~v1_xcmplx_0(sK2) | ~v1_xcmplx_0(sK1) | ~v1_xcmplx_0(sK0) <- (~1) [superposition 32,27] {a:1,w:17,wCS:1700,goal:1,sine:1,thAx:0,allAx:5,thDist:-5}
85. ~v1_xcmplx_0(sK2) | ~v1_xcmplx_0(sK1) | ~v1_xcmplx_0(sK0) <- (~1) [trivial inequality removal 78] {a:1,w:6,wCS:600,goal:1,sine:1,thAx:0,allAx:5,thDist:-5}
95. ~v1_xcmplx_0(sK1) | ~v1_xcmplx_0(sK0) <- (~1, 2) [subsumption resolution 85,37] {a:1,w:4,wCS:400,goal:1,sine:1,thAx:0,allAx:5,thDist:-5}
96. ~v1_xcmplx_0(sK0) <- (~1, 2, 3) [subsumption resolution 95,42] {a:1,w:2,wCS:200,goal:1,sine:1,thAx:0,allAx:5,thDist:-5}
97. $false <- (~1, 2, 3, 4) [subsumption resolution 96,47] {a:1,w:0,goal:1,sine:1,thAx:0,allAx:5,thDist:-5}
98. 1 | ~2 | ~3 | ~4 [avatar contradiction clause 97]
102. $false [avatar sat refutation 33,38,43,48,98] {a:0,w:0,goal:1,sine:0,thAx:0,allAx:63,thDist:-63}
% SZS output end Proof for xcmplx_1__t1_xcmplx_1
% ------------------------------
% Version: Vampire 4.5.1 (commit 226f88162 on 2021-09-12 20:13:44 +0200)
% Termination reason: Refutation

% >>> Input
% Input formulas: 6
% Introduced skolems: 4
% 
% >>> Saturation
% Initial clauses: 8
% Generated clauses: 50
% Active clauses: 8
% Passive clauses: 9
% Final active clauses: 8
% Final passive clauses: 1
% Main loop iterations started: 8
% 
% >>> Simplifying Inferences
% Duplicate literals: 14
% Trivial inequalities: 1
% Fw subsumption resolutions: 11
% 
% >>> Deletion Inferences
% Forward subsumptions: 2
% 
% >>> Generating Inferences
% Unit resulting resolution: 1
% Forward superposition: 4
% Backward superposition: 8
% Self superposition: 1
% 
% >>> AVATAR
% Split clauses: 2
% Split components: 4
% Sat splitting refutations: 2
% 
% >>> SAT Solver Statistics
% SAT solver clauses: 11
% SAT solver unit clauses: 5
% 
% Memory used [KB]: 9338
% Time elapsed: 0.002 s
% ------------------------------
% ------------------------------
% Time measurement results:
% parsing: 0.001 s
% other: 0.002 s ( own 0.001 s ) 

